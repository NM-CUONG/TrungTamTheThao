@model WebApp.Models.tb_User

@{
    ViewBag.Title = "Đăng ký";
}

<style>
    .container-login {
        width: 100%;
        height: 100vh;
        background-image: url('/Uploads/regis_loginImage.jpg');
        background-size: cover;
    }

    .form-control {
        background-color: rgba(255,255,255,0.2);
    }

        .form-control:focus {
            background-color: rgba(255, 255, 255, 1);
            color: black;
        }

    .card { 
        font-size: 18px;
    }

    .label {
        color: black;
    }

    .textbox {
    }

    .card-header {
        color: black;
        text-shadow: 0 0 10px revert-layer;
    }
    
</style>

<div class="container-login">
    <div class="d-flex justify-content-center align-items-center" style="height: 100%; transform: translateY(-10%) ">
        <div class="col-md-4">
            <div class="card" style="background-color: rgba(255, 255, 255, 1);">
                <div class="card-header text-center fs-3 fw-bold text-uppercase">Đăng ký</div>
                <div class="card-body">
                    @using (Ajax.BeginForm("Regis", "Home", new AjaxOptions()
                    {
                        HttpMethod = "POST",
                        OnSuccess = "handleSuccess",
                        OnFailure = "handleFailure",
                    }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group row px-4 py-2">
                            @Html.LabelFor(m => m.UserName, new { @class = "row label" })
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control textbox", required = "required" })
                            <span id="userNameError" class="text-danger"></span>
                        </div>

                        <div class="form-group row px-4 py-2">
                            @Html.LabelFor(m => m.Password, new { @class = "row label" })
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control textbox", type = "password", required = "required" })
                            <span id="passwordError" class="text-danger"></span>
                        </div>

                        <div class="form-group row px-4 py-2">
                            <label for="ReEnterPassword" class="row label">Nhập lại mật khẩu</label>
                            <input type="password" name="ReEnterPassword" id="ReEnterPassword" value="" class="form-control" required />
                            <span id="reEnterPasswordError" class="text-danger"></span>
                        </div>

                        <div class="form-group row px-4 py-2">
                            @Html.LabelFor(m => m.Email, new { @class = "row label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control textbox", required = "required" })
                            <span id="emailError" class="text-danger"></span>
                        </div>

                        <div class="form-group row px-4 py-4">
                            <button type="submit" class="btn btn-outline-secondary btn-block" >Đăng ký</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function handleSuccess(data) {
        if (data.success) {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["success"](data.message, "Thông báo")

            setTimeout(function () {
                window.location.href = '/Home/Login';
            }, 5000); 
            
        } else {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["error"](data.message, "Thông báo")
            
        }

    }
    function handleFailure() {
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr["error"]("Đã có lỗi xảy ra trong quá trình đăng ký!", "Thông báo")

    }
    $(document).ready(function () {
        isValid = true;
        // Validation for UserName
        $('#UserName').on('blur', function () {
            var userName = $(this).val().trim();
            var $userNameError = $('#userNameError');
            if (userName === "") {
                $userNameError.text("Vui lòng nhập tên đăng nhập.");
                isValid = false;
            } else {
                $userNameError.text("");
                isValid = true;
            }
        });

        // Validation for Password
        $('#Password').on('blur', function () {
            var password = $(this).val();
            var $passwordError = $('#passwordError');
            if (password.length < 8 || !/\d/.test(password) || !/[a-zA-Z]/.test(password)) {
                $passwordError.text("Mật khẩu phải có ít nhất 8 kí tự, bao gồm ít nhất một chữ cái và một số.");
                isValid = false;

            } else {
                isValid = true;
                $passwordError.text("");
            }
        });

        // Validation for ReEnterPassword
        $('#ReEnterPassword').on('blur', function () {
            var password = $('#Password').val();
            var reEnterPassword = $(this).val().trim();
            var $reEnterPasswordError = $('#reEnterPasswordError');

            if (reEnterPassword !== password || reEnterPassword === "") {
                $reEnterPasswordError.text("Mật khẩu không khớp.");
                isValid = false;

            } else {
                $reEnterPasswordError.text("");
                isValid = true;
            }
        });

     // Validation và hiển thị lỗi khi blur ra khỏi trường nhập liệu
        $('#Email').on('blur', function() {
            var email = $(this).val().trim();
            var $emailError = $('#emailError');

             // Biểu thức chính quy để kiểm tra email
             @{
                string emailRegexPattern = @"/^[^\s@]+@[^\s@]+\.[^\s@]+$/";
             }
            var emailRegex = @emailRegexPattern;

            if (email === "" || !emailRegex.test(email)) {
                $emailError.text("Địa chỉ email không hợp lệ.");
                isValid = false;
            }
            else {
                $emailError.text("");
                isValid = true;
            }
        });

        // Prevent form submission if there are validation errors
        $('button[type="submit"]').click(function (event) {
            if (!isValid) {
                //chặn hành động submit khi chưa valid xong
                event.preventDefault();
                //hiển thị thông báo lỗi

            } 
        });

    });
</script>