
@{
    ViewBag.Title = "ChangeEmail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model WebApp.Models.tb_User

<style>
    .container-login {
        width: 100%;
        height: 100vh;
        background-image: url('/Uploads/regis_loginImage.jpg');
        background-size: cover;
    }

    .form-control {
        background-color: rgba(255,255,255,0.2);
    }

        .form-control:focus {
            background-color: rgba(255, 255, 255, 1);
            color: black;
        }

    .card {
        font-size: 18px;
    }

    .label {
        color: black;
    }

    .textbox {
    }

    .card-header {
        color: black;
        text-shadow: 0 0 10px revert-layer;
    }

    label {
        padding-left: 0px !important;
    }

    .back {
        position: fixed;
        top: 20px; /* điều chỉnh khoảng cách từ trên xuống */
        right: 20px; /* điều chỉnh khoảng cách từ phải sang trái */
        z-index: 9999; /* đảm bảo nút này luôn hiển thị phía trên các phần tử khác */
        background-color: #FF5733;
        color: white;
        border: 1px solid #FF5733;
        padding: 10px 20px;
        text-decoration: none;
        font-weight: bold;
    }

        .back:hover {
            background-color: white;
            color: #FF5733; /* chữ màu cam nổi bật khi di chuột vào */
        }
</style>

<a class="back" href="/Home/Account"> <span class="bi bi-arrow-return-left"> </span>Quay lại</a>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}
else
{
    <div class="container-login">
        <div class="d-flex justify-content-center align-items-center" style="height: 100%; transform: translateY(-10%) ">
            <div class="col-md-4">
                <div class="card" style="background-color: rgba(255, 255, 255, 1);">
                    <div class="card-header text-center fs-3 fw-bold text-uppercase">Thông tin email</div>
                    <div class="card-body">
                        @using (Ajax.BeginForm("ChangeEmail", "Home", new AjaxOptions()
                        {
                            HttpMethod = "POST",
                            OnSuccess = "changeEmailSuccess",
                            OnFailure = "changeEmailFailure",
                        }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group row px-4 py-2">
                                <label class="col-12">Email hiện tại</label>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control textbox", disabled = "disabled" })
                            </div>

                            <div class="form-group row px-4 py-2">
                                <label class="col-12">Email mới<span class="text-danger"> *</span> </label>
                                <input type="email" name="newEmail" id="newEmail" value="" class="form-control" required />
                                <span id="newEmailError" class="text-danger"></span>
                            </div>

                            <div class="form-group row px-4 py-4">
                                <button id="btn-submit" type="submit" class="btn btn-outline-secondary btn-block">Lưu</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>

    function changeEmailSuccess(data) {
        debugger
        if (!data.success) {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["error"](data.message, "Thông báo");
        } else {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["success"](data.message, "Thông báo")
        }
    }

    function changeEmailFailure() {
        debugger
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr["error"]("Đã có lỗi xảy ra!", "Thông báo")

    }

    function validateEmail() {
        var email = document.getElementById('newEmail').value;
        var emailError = document.getElementById('newEmailError');
        @{
            string emailRegexPattern = @"/^[^\s@]+@[^\s@]+\.[^\s@]+$/";
        }
        var emailRegexPattern = @emailRegexPattern;

        if (email.trim() === '') {
            emailError.textContent = 'Email không được để trống.';
            return false;
        } else if (!emailRegexPattern.test(email)) {
            emailError.textContent = 'Email không hợp lệ.';
            return false;
        } else {
            emailError.textContent = '';
            return true;
        }
    }


    $('button[type="submit"]').click(function (event) {
        if (!validateEmail()) {
            event.preventDefault();
        }
    });

</script>



