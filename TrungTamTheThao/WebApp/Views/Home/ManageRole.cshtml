
@{
    ViewBag.Title = "ManageRole";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var listRole = ViewBag.listRole;
}

@model WebApp.Models.tb_Role

<style>
    .btn-add {
        margin-right: 30px;
    }

    .modal-header {
        background-color: #2a86bb;
        color: white;
    }

    .mauxam {
        background-color: gainsboro;
    }


    .confirmation-dialog {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
    }

    .confirmation-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
    }

    .buttons {
        text-align: center;
        margin-top: 20px;
    }

    .confirm-btn,
    .cancel-btn {
        min-width: 80px;
        margin: 0 10px;
        cursor: pointer;
    }
</style>


<div class="modal modal-lg fade" id="myModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header ">
                <h1 class="modal-title w-100 text-center fs-5 text-uppercase" id="staticBackdropLabel">Thêm mới quyền</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @using (Ajax.BeginForm("CreateRole", "Home", new AjaxOptions()
            {
                HttpMethod = "POST",
                OnSuccess = "handleSuccess",
                OnFailure = "handleFailure",
            }))
            {
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <label class="form-label" for="UserID">Mã quyền<span class="text-danger"> *</span></label>
                            <div class="col-sm-12">
                                @Html.TextBoxFor(m => m.RoleID, new { @class = "form-control mauxam ", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <label class="form-label" for="RoleName">Tên quyền<span class="text-danger"> *</span></label>
                            <div class="col-sm-12 col-lg-12">
                                @Html.TextBoxFor(m => m.RoleName, new { @class = "form-control" })
                                <span id="roleNameError" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn-submit btn btn-primary">Thêm mới</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            }
        </div>
    </div>
</div>

<div>
    <div class="d-flex flex-row-reverse">
        <button class="btn btn-primary btn-add"  onclick="removeError()" data-bs-toggle="modal" data-bs-target="#myModal">Thêm mới</button>
    </div>
    <div class="container">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">STT</th>
                    <th scope="col">Mã quyền</th>
                    <th scope="col">Tên quyền</th>
                    <th scope="col">Thao tác</th>
                </tr>
            </thead>
            <tbody class="table-content">
                @{
                    var STT = 1;
                    foreach (var item in listRole)
                    {
                        <tr>
                            <td>@STT</td>
                            <td>@item.RoleID</td>
                            <td>@item.RoleName</td>
                            <td>
                                <div class="btn btn-warning btn-fix" onclick="Fix(@item.ID)"><i class="bi bi-tools"></i> Sửa</div>
                                <div data-id="@item.ID" onclick="openConfirmationDialog(this)" class="btn btn-danger btn-delete"><i class="bi bi-trash"></i> Xóa</div>
                            <td>
                        </tr>
                        STT++;
                    }
                }
            </tbody>

        </table>
    </div>

</div>

<div id="confirmationDialog" class="confirmation-dialog">
    <div class="confirmation-content">
        <h5 class="">Bạn có chắc chắn muốn xóa?</h5>
        <div>
            <div style="display: none;"><input type="text" id="hiddenID" name="hiddenID" value="" /></div>
            <div class="buttons">
                <button id="confirmBtn" type="submit" class="confirm-btn btn btn-primary"><i class="bi bi-check-circle-fill"></i> Có</button>
                <button id="cancelBtn" type="button" class="cancel-btn btn btn-danger"><i class="bi bi-x-circle-fill"></i> Không</button>
            </div>
        </div>
    </div>
</div>


<div class="modal modal-lg fade" id="formFix" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header ">
                <h1 class="modal-title w-100 text-center fs-5 text-uppercase" id="staticBackdropLabel">Sửa quyền</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @using (Ajax.BeginForm("UpdateRole", "Home", new AjaxOptions()
            {
                HttpMethod = "POST",
                OnSuccess = "FixSuccess",
                OnFailure = "FixFailure",
            }))
            {
                <div class="modal-body modal-body-fix">
                    
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn-submit btn btn-primary">Sửa</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            }
        </div>
    </div>
</div>


<script>

    // Hàm xóa các validate 
    function removeError() {
        $('#roleNameError').text(null);
    }

    // Các hàm xử lý sửa quyền
    function Fix(ID) {
        debugger
        if (!ID) {
            toastr.error("Không thể sửa, đã xảy ra lỗi!", "Thông báo");
            return;
        }
        $.ajax({
            url: '/Home/GetFormFix',
            type: 'GET',
            data: { ID: ID },
            success: function (rs) {
                if (!rs) {
                    toastr.error(rs.message, "Thông báo")
                    return;
                }

                $('.modal-body-fix').html(rs);
                $('#formFix').modal('show');
                
            }, 
            error: function () {
                toastr.error("Không thể sửa, đã xảy ra lỗi!", "Thông báo");
            }
        })
    }

    function FixSuccess(rs) {
        if (!rs.success) {
            toastr.error(rs.message, "Thông báo")
            return;
        }
        toastr.success(rs.message, "Thông báo");
    }

    function FixFailure() {
        toastr.error("Đã xảy ra lỗi trong quá trình sửa", "Thông báo")
    }


    // Các hàm xử lý xóa quyền
    function openConfirmationDialog(button) {
        document.getElementById('confirmationDialog').style.display = 'block';
        var dataId = button.getAttribute('data-id');
        $('#hiddenID').val(dataId);
    }

    function closeConfirmationDialog() {
        document.getElementById('confirmationDialog').style.display = 'none';
        $('#roleNameError').html('');

    }

    function handleCancel() {
        closeConfirmationDialog();
    }

    function handleConfirm() {
        closeConfirmationDialog();

        const ID = $('#hiddenID').val();
        if (ID == null) {
            toastr.error("Đã có lỗi xảy ra khi xóa", "Thông báo");
            return;
        }

        $.ajax({
            url: '/Home/DeleteRole',
            type: 'GET',
            data: { ID: ID },
            success: function (rs) {
                if (!rs.success) {
                    toastr.error("Đã có lỗi xảy ra khi xóa", "Thông báo");
                    return;
                }
                toastr.success("Xóa thành công", "Thông báo");
                window.location.reload();
            },
            error: function () {
                toastr.error("Đã có lỗi xảy ra khi xóa", "Thông báo");
            }
        }) 
    }

    document.getElementById('cancelBtn').addEventListener('click', handleCancel);
    document.getElementById('confirmBtn').addEventListener('click', handleConfirm);

    // Các hàm xử lý thêm quyền
    function handleSuccess(data) {
        if (!data.success) {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["error"](data.message, "Thông báo");
        } else {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["success"](data.message, "Thông báo");

            window.location.reload();
        }
    }

    function handleFailure() {
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr["error"]("Đã có lỗi xảy ra khi thêm mới!", "Thông báo")

    }

    function validateRoleName() {
        var roleNameValue = $('#RoleName').val().trim();
        var errorElement = $('#roleNameError');

        if (roleNameValue === "") {
            errorElement.html("Vui lòng nhập trường thông tin này");
            $('#RoleName').focus();
            return false;
        } else {
            errorElement.html("");
            return true;
        }
    }

    $('.btn-submit').on('click', function (event) {
        if (!validateRoleName()) {
            event.preventDefault();
        }
    });


</script>
