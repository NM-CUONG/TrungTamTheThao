
@{
    ViewBag.Title = "Account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model WebApp.Models.tb_User

@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")

<style>
    .container-account {
        width: 100%;
        height: 100vh;
        background-image: url('/Uploads/regis_loginImage.jpg');
        background-size: cover;
    }

    .form-control {
        background-color: rgba(255,255,255,0.2);
    }

        .form-control:focus {
            background-color: rgba(255, 255, 255, 1);
            color: black;
        }

    .card {
        font-size: 18px;
    }

    .label {
        color: black;
    }

    .textbox {
    }

    .card-header {
        color: black;
        text-shadow: 0 0 10px revert-layer;
    }
</style>


@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}
else
{
    <div class="container-account">
        <div class="d-flex justify-content-center align-items-center" style="height: 100%; transform: translateY(-10%) ">
            <div class="col-md-5">
                <div class="card" style="background-color: rgba(255, 255, 255, 1);">
                    <div class="card-header text-center fs-3 fw-bold text-uppercase">Thông tin tài khoản</div>
                    <div class="card-body">
                        @using (Ajax.BeginForm("Account", "Home", new AjaxOptions()
                        {
                            HttpMethod = "POST",
                            OnSuccess = "handleSuccess",
                            OnFailure = "handleFailure",
                        }))
                        {
                            @Html.HiddenFor(m => m.ID)

                            <div class="form-group row px-4 py-2">
                                @Html.LabelFor(m => m.FullName, new { @class = "row label" })
                                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control textbox" })
                                <span id="fullNameError" class="text-danger"></span>
                            </div>
                            <div class="form-group row px-4 py-2">
                                @Html.LabelFor(m => m.Phone, new { @class = "row label" })
                                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control textbox" })
                                <span id="phoneError" class="text-danger"></span>
                            </div>
                            <div class="form-group row px-4 py-2">
                                @Html.LabelFor(m => m.Address, new { @class = "row label" })
                                @Html.TextBoxFor(m => m.Address, new { @class = "form-control textbox" })
                                <span id="addressError" class="text-danger"></span>
                            </div>
                            <div class="form-group row px-4 py-2">
                                <button class="btn btn-outline-info">Thông tin email</button>
                            </div>
                            <div class="form-group row px-4 py-2">
                                <button class="btn btn-outline-primary">Thay đổi mật khẩu</button>
                            </div>

                            <div class="form-group row px-4 py-4">
                                <button type="submit" class="btn btn-outline-secondary btn-block">Lưu thay đổi</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}



<script>

    // Hàm kiểm tra số điện thoại
    function validatePhone() {
        var phoneInput = document.getElementById('Phone');
        var phoneError = document.getElementById('phoneError');
        var phonePattern = /^0\d{9}$/;

        if (!phonePattern.test(phoneInput.value)) {
            phoneError.textContent = "Số điện thoại không hợp lệ";
            return false;
        } else {
            phoneError.textContent = "";
            return true;
        }
    }

    $('button[type="submit"]').click(function (event) {
        if (!validatePhone()) {
            event.preventDefault();
        }
    });

    function handleSuccess(response) {
        if (response.success == true) {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["success"](response.message, "Thông báo")
        } else {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr["error"](response.message, "Thông báo")
        }
    }

    function handleFailure() {
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        toastr["error"]("Đã có lỗi xảy ra trong quá trình sửa đổi thông tin!", "Thông báo")
    }


</script>