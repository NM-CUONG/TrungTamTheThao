
@{
    ViewBag.Title = "ManageBooking";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .btn-add {
        margin-right: 30px;
    }

    .modal-header {
        background-color: #2a86bb;
        color: white;
    }

    .mauxam {
        background-color: gainsboro;
    }


    .confirmation-dialog {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
    }

    .confirmation-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
    }

    .buttons {
        text-align: center;
        margin-top: 20px;
    }

    .confirm-btn,
    .cancel-btn {
        min-width: 80px;
        margin: 0 10px;
        cursor: pointer;
    }

    .search-box {
        width: 40%;
    }
</style>


<div>
    <h1 class="text-uppercase">Quản lý đặt phòng</h1>
    <div class="search-box">
        @Html.Partial("_SearchPartial")
    </div>
    <div class="d-flex flex-row-reverse">
        <button class="btn btn-primary btn-add" onclick="Create()">Thêm mới</button>
    </div>
    <div class="container">

    </div>

</div>

<div id="confirmationDialog" class="confirmation-dialog">
    <div class="confirmation-content">
        <h5 class="">Bạn có chắc chắn muốn xóa?</h5>
        <div>
            <div style="display: none;"><input type="text" id="hiddenID" name="hiddenID" value="" /></div>
            <div class="buttons">
                <button id="confirmBtn" type="submit" class="confirm-btn btn btn-primary"><i class="bi bi-check-circle-fill"></i> Có</button>
                <button id="cancelBtn" type="button" class="cancel-btn btn btn-danger"><i class="bi bi-x-circle-fill"></i> Không</button>
            </div>
        </div>
    </div>
</div>

<div id="form">
    <div class="modal modal-lg fade" id="popup" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">

    </div>
</div>


<script>
    // Hàm tìm kiếm
    function Search() {
        var searchString = $('.input-search').val().trim();

        $.ajax({
            url: '/Home/SearchBooking',
            type: 'GET',
            data: { searchString: searchString },
            success: function (rs) {
                $('.container').empty();
                $('.container').html(rs);
            },
            error: function () {
                toastr.error("Đã có lỗi xảy ra khi tìm kiếm", "Thông báo");
            }
        })
    }
    // Các hàm xử lý bảng
    function GetTable() {
        $.ajax({
            url: '/Home/GetTableBooking',
            type: 'GET',
            success: function (rs) {
                $('.container').empty();
                $('.container').html(rs);
            },
            error: function () {
                toastr.error("Đã có lỗi xảy ra khi lấy bảng", "Thông báo");
            }
        })
    }


    // Các hàm xử lý thêm quyền

    function Create() {
        $.ajax({
            url: '/Home/CreateBooking',
            type: 'GET',
            success: function (rs) {
                if (!rs) {
                    toastr.error(rs.message, "Thông báo")
                    return;
                }

                $('#popup').html(rs);
                $('#popup').modal('show');

            },
            error: function () {
                toastr.error("Không thể thêm, đã xảy ra lỗi!", "Thông báo");
            }
        })
    }

    // Các hàm xử lý sửa quyền
    function Edit(ID) {
        if (!ID) {
            toastr.error("Không thể sửa, đã xảy ra lỗi!", "Thông báo");
            return;
        }
        $.ajax({
            url: '/Home/EditBooking',
            type: 'GET',
            data: { ID: ID },
            success: function (rs) {
                if (!rs) {
                    toastr.error(rs.message, "Thông báo")
                    return;
                }

                $('#popup').html(rs);
                $('#popup').modal('show');

            },
            error: function () {
                toastr.error("Không thể sửa, đã xảy ra lỗi!", "Thông báo");
            }
        })
    }

    function Success(rs) {
        if (!rs.success) {
            toastr.error(rs.message, "Thông báo")
            return;
        }

        $('#popup').modal('hide');
        GetTable();
        toastr.success(rs.message, "Thông báo")

    }

    function Failure() {
        toastr.error("Đã xảy ra lỗi", "Thông báo")
    }

    // Các hàm xử lý xóa quyền
    function openConfirmationDialog(button) {
        document.getElementById('confirmationDialog').style.display = 'block';
        var dataId = button.getAttribute('data-id');
        $('#hiddenID').val(dataId);
    }

    function closeConfirmationDialog() {
        document.getElementById('confirmationDialog').style.display = 'none';
        $('#BookingNameError').html('');

    }

    function handleCancel() {
        closeConfirmationDialog();
    }

    function handleConfirm() {
        closeConfirmationDialog();

        const ID = $('#hiddenID').val();
        if (ID == null) {
            toastr.error("Đã có lỗi xảy ra khi xóa", "Thông báo");
            return;
        }

        $.ajax({
            url: '/Home/DeleteBooking',
            type: 'GET',
            data: { ID: ID },
            success: function (rs) {
                if (!rs.success) {
                    toastr.error(rs.message, "Thông báo");
                    return;
                }
                toastr.success(rs.message, "Thông báo");
                GetTable();
            },
            error: function () {
                toastr.error("Đã có lỗi xảy ra khi xóa", "Thông báo");
            }
        })
    }

    document.getElementById('cancelBtn').addEventListener('click', handleCancel);
    document.getElementById('confirmBtn').addEventListener('click', handleConfirm);


    // Các hàm xử lý validate
    // Hàm validate người đặt
    function validateUserID() {
        var userIDInput = $('#UserID');

        // Lấy giá trị của người đặt
        var userID = userIDInput.val();

        // Kiểm tra nếu không có người đặt được chọn
        if (!userID || userID === "--Chọn người đặt--") {
            $('#userIDError').text('Vui lòng chọn một người đặt.');
            return false;
        } else {
            $('#userIDError').text('');
            return true;
        }
    }

    // Hàm đổ ngày hiện tại vào datetimepicker
    function GetNowDaySetDateTimePiker(ClassNameDateTimePicker) {
        var datetimepicker = document.getElementsByClassName(ClassNameDateTimePicker);
        // Lấy ngày hiện tại
        var currentDate = new Date();
        var year = currentDate.getFullYear();
        var month = (currentDate.getMonth() + 1).toString().padStart(2, "0");
        var day = currentDate.getDate().toString().padStart(2, "0");
        var today = year + "-" + month + "-" + day;

        // Đặt giá trị ngày hiện tại cho datetimepicker
        datetimepicker[0].value = today;

    }

    

    //Hàm check ngày bắt đầu
    function validateNgayBatDau() {
        var ngaySuDungInput = $('.datetimepicker-ngaybatdau');
        var ngaySuDung = new Date(ngaySuDungInput.val());
        var currentDate = new Date();
        var diffTime = ngaySuDung.getTime() - currentDate.getTime();
        var diffDays = diffTime / (1000 * 3600 * 24);
        if (ngaySuDung.setHours(0, 0, 0, 0) < currentDate.setHours(0, 0, 0, 0) || diffDays > 5) {
            $('#startTimeError').text('Ngày sử dụng sân phải là ngày hiện tại hoặc trong vòng 5 ngày kể từ ngày hiện tại.');
            return false;
        } else {
            $('#startTimeError').text('');
            return true;
        }
    }

    //Hàm check ngày kết thúc
    function validateNgayKetThuc() {
        var ngayBatDauInput = $('.datetimepicker-ngaybatdau');
        var ngayKetThucInput = $('.datetimepicker-ngayketthuc');

        var ngayBatDau = new Date(ngayBatDauInput.val());
        var ngayKetThuc = new Date(ngayKetThucInput.val());

        // Kiểm tra nếu ngày kết thúc sau ngày bắt đầu
        if (ngayKetThuc < ngayBatDau) {
            $('#endTimeError').text('Ngày kết thúc phải sau ngày bắt đầu.');
            return false;
        } else {
            $('#endTimeError').text('');
            return true;
        }
    }
    // Hàm validate phòng
    function validateArenaID() {
        var arenaIDInput = $('#ArenaID');

        // Lấy giá trị của phòng
        var arenaID = arenaIDInput.val();

        // Kiểm tra nếu không có phòng được chọn
        if (!arenaID || arenaID === "--Chọn phòng--") {
            $('#arenaIDError').text('Vui lòng chọn một phòng.');
            return false;
        } else {
            $('#arenaIDError').text('');
            return true;
        }
    }

    // Hàm validate khung giờ
    function validateShiftID() {
        var shiftIDInput = $('#ShiftID');

        // Lấy giá trị của khung giờ
        var shiftID = shiftIDInput.val();

        // Kiểm tra nếu không có khung giờ được chọn
        if (!shiftID || shiftID === "--Chọn khung giờ--") {
            $('#shiftIDError').text('Vui lòng chọn một khung giờ.');
            return false;
        } else {
            $('#shiftIDError').text('');
            return true;
        }
    }

    // Hàm validate người liên hệ
    function validateContactName() {
        var contactNameInput = $('#ContactName');

        // Lấy giá trị của người liên hệ
        var contactName = contactNameInput.val();

        // Kiểm tra nếu không có người liên hệ được nhập
        if (!contactName.trim()) {
            $('#contactNameError').text('Vui lòng nhập tên người liên hệ.');
            return false;
        } else {
            $('#contactNameError').text('');
            return true;
        }
    }

    // Hàm validate trạng thái
    function validateStatus() {
        var statusInput = $('#Status');

        // Lấy giá trị của trạng thái
        var status = statusInput.val();

        // Kiểm tra nếu không có trạng thái được chọn
        if (!status || status === "--Chọn trạng thái--") {
            $('#statusError').text('Vui lòng chọn một trạng thái.');
            return false;
        } else {
            $('#statusError').text('');
            return true;
        }
    }

    // Hàm validate tiền
    function validateMoney() {
        var moneyInput = $('#Money');

        // Lấy giá trị của tiền
        var money = moneyInput.val();

        // Kiểm tra nếu trường tiền bị bỏ trống hoặc không phải là số
        if (!money.trim() || isNaN(parseFloat(money))) {
            $('#moneyError').text('Vui lòng nhập số tiền hợp lệ.');
            return false;
        } else {
            $('#moneyError').text('');
            return true;
        }
    }

    // Hàm validate số điện thoại
    function validatePhoneNumber() {
        var phoneNumberInput = $('#PhoneNumber');

        // Lấy giá trị của số điện thoại
        var phoneNumber = phoneNumberInput.val();

        // Kiểm tra nếu số điện thoại không rỗng và không đúng định dạng
        if (phoneNumber.trim() && !/^\d{10}$/.test(phoneNumber)) {
            $('#phoneNumberError').text('Số điện thoại phải có 10 chữ số.');
            return false;
        } else {
            $('#phoneNumberError').text('');
            return true;
        }
    }


    $(document).ready(function () {
        GetTable();

        $('.btn-search').on('click', function () {
            Search();
        })

        $('.input-search').keypress(function (event) {
            if (event.which == 13) {
                Search();
            }
        })
    })


</script>
