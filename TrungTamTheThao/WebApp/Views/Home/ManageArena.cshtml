
@{
    ViewBag.Title = "ManageArena";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .btn-add {
        margin-right: 30px;
    }

    .modal-header {
        background-color: #2a86bb;
        color: white;
    }

    .mauxam {
        background-color: gainsboro;
    }


    .confirmation-dialog {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
    }

    .confirmation-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
    }

    .buttons {
        text-align: center;
        margin-top: 20px;
    }

    .confirm-btn,
    .cancel-btn {
        min-width: 80px;
        margin: 0 10px;
        cursor: pointer;
    }

    .search-box {
        width: 40%;
    }
</style>


<div class="">
    <h1 class="text-uppercase">Quản lý phòng</h1>
    <div class="search-box">
        @Html.Partial("_SearchPartial")
    </div>
    <div class="d-flex flex-row-reverse">
        <button class="btn btn-primary btn-add" onclick="Create()">Thêm mới</button>
    </div>

    <div class="container">

    </div>

</div>

<div id="confirmationDialog" class="confirmation-dialog">
    <div class="confirmation-content">
        <h5 class="">Bạn có chắc chắn muốn xóa?</h5>
        <div>
            <div style="display: none;"><input type="text" id="hiddenID" name="hiddenID" value="" /></div>
            <div class="buttons">
                <button id="confirmBtn" type="submit" class="confirm-btn btn btn-primary"><i class="bi bi-check-circle-fill"></i> Có</button>
                <button id="cancelBtn" type="button" class="cancel-btn btn btn-danger"><i class="bi bi-x-circle-fill"></i> Không</button>
            </div>
        </div>
    </div>
</div>

<div id="form">
    <div class="modal modal-lg fade" id="popup" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">

    </div>
</div>


<script>


    // Các hàm xử lý bảng
    function GetTable() {
        $.ajax({
            url: '/Home/GetTableArena',
            type: 'GET',
            success: function (rs) {
                $('.container').empty();
                $('.container').html(rs);
            },
            error: function () {
                toastr.error("Đã có lỗi xảy ra khi lấy bảng", "Thông báo");
            }
        })
    }

    // Hàm tìm kiếm
    function Search() {
        var searchString = $('.input-search').val().trim();

        $.ajax({
            url: '/Home/SearchArena',
            type: 'GET',
            data: { searchString: searchString },
            success: function (rs) {
                $('.container').empty();
                $('.container').html(rs);
            },
            error: function () {
                toastr.error("Đã có lỗi xảy ra khi tìm kiếm", "Thông báo");
            }
        })
    }

    // Các hàm xử lý thêm quyền

    function Create() {
        $.ajax({
            url: '/Home/CreateArena',
            type: 'GET',
            success: function (rs) {
                if (!rs) {
                    toastr.error(rs.message, "Thông báo")
                    return;
                }

                $('#popup').html(rs);
                $('#popup').modal('show');

            },
            error: function () {
                toastr.error("Không thể thêm, đã xảy ra lỗi!", "Thông báo");
            }
        })
    }

    // Các hàm xử lý sửa quyền
    function Edit(ID) {
        if (!ID) {
            toastr.error("Không thể sửa, đã xảy ra lỗi!", "Thông báo");
            return;
        }
        $.ajax({
            url: '/Home/EditArena',
            type: 'GET',
            data: { ID: ID },
            success: function (rs) {
                if (!rs) {
                    toastr.error(rs.message, "Thông báo")
                    return;
                }

                $('#popup').html(rs);
                $('#popup').modal('show');

            },
            error: function () {
                toastr.error("Không thể sửa, đã xảy ra lỗi!", "Thông báo");
            }
        })
    }

    function Success(rs) {
        if (!rs.success) {
            toastr.error(rs.message, "Thông báo")
            return;
        }

        $('#popup').modal('hide');
        GetTable();
        toastr.success(rs.message, "Thông báo")

    }

    function Failure() {
        toastr.error("Đã xảy ra lỗi", "Thông báo")
    }

    // Các hàm xử lý xóa quyền
    function openConfirmationDialog(button) {
        document.getElementById('confirmationDialog').style.display = 'block';
        var dataId = button.getAttribute('data-id');
        $('#hiddenID').val(dataId);
    }

    function closeConfirmationDialog() {
        document.getElementById('confirmationDialog').style.display = 'none';

    }

    function handleCancel() {
        closeConfirmationDialog();
    }

    function handleConfirm() {
        closeConfirmationDialog();

        const ID = $('#hiddenID').val();
        if (ID == null) {
            toastr.error("Đã có lỗi xảy ra khi xóa", "Thông báo");
            return;
        }

        $.ajax({
            url: '/Home/DeleteArena',
            type: 'GET',
            data: { ID: ID },
            success: function (rs) {
                if (!rs.success) {
                    toastr.error(rs.message, "Thông báo");
                    return;
                }
                toastr.success(rs.message, "Thông báo");
                GetTable();
            },
            error: function () {
                toastr.error("Đã có lỗi xảy ra khi xóa", "Thông báo");
            }
        })
    }

    document.getElementById('cancelBtn').addEventListener('click', handleCancel);
    document.getElementById('confirmBtn').addEventListener('click', handleConfirm);

    // Các hàm validation

    function validateArenaName() {
        var arenaName = document.getElementById('ArenaName').value;
        var arenaNameError = document.getElementById('arenaNameError');

        if (arenaName.trim() === '') {
            arenaNameError.innerText = 'Tên phòng không được để trống';
            return false;
        } else {
            arenaNameError.innerText = '';
            return true;
        }
    }

    function validateCate() {
        var cateID = document.getElementById('CateID').value;
        var cateError = document.getElementById('cateError');

        if (cateID.trim() === '' || cateID === '--Chọn khu vực--') {
            cateError.innerText = 'Vui lòng chọn loại khu vực';
            return false;
        } else {
            cateError.innerText = '';
            return true;
        }
    }

    function validateSize() {
        var sizeID = document.getElementById('SizeID').value;
        var sizeError = document.getElementById('sizeError');

        if (sizeID.trim() === '' || sizeID === '--Chọn loại phòng--') {
            sizeError.innerText = 'Vui lòng chọn loại phòng';
            return false;
        } else {
            sizeError.innerText = '';
            return true;
        }
    }

    function validateMaxPersons() {
        var maxPersonsInput = document.getElementById('MaxPersons');
        var maxPersonsValue = maxPersonsInput.value.trim();

        if (maxPersonsValue === '') {
            document.getElementById('maxpersonsError').innerText = 'Vui lòng nhập số người tối đa';
            return false;
        }

        var maxPersonsNumber = parseInt(maxPersonsValue);
        if (maxPersonsNumber <= 0) {
            document.getElementById('maxpersonsError').innerText = 'Số người tối đa phải lớn hơn 0';
            return false;
        }

        document.getElementById('maxpersonsError').innerText = '';
        return true;
    }


    $(document).ready(function () {
        GetTable();

        $('.btn-search').on('click', function () {
            Search();
        })

        $('.input-search').keypress(function (event) {
            if (event.which == 13) {
                Search();
            }
        })
    })


</script>

